//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from TemplateLexer.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public partial class TemplateLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		OPEN=1, TEXT=2, CLOSE=3, INTEGER=4, FLOAT=5, BOOL=6, STRING=7, BRACE_L=8, 
		BRACE_R=9, INCREMENT=10, DECREMENT=11, MUL=12, DIV=13, MOD=14, ADD=15, 
		SUB=16, PARENTHESES_L=17, PARENTHESES_R=18, IF=19, DOT=20, COMMA=21, NOTEQUAL=22, 
		LOGIC_NOT=23, BIT_INVERT=24, SHIFTL=25, SHIFTR=26, LESS=27, LESSEQUAL=28, 
		GREATER=29, GREATEREQUAL=30, EQUAL=31, LOGIC_AND=32, LOGIC_OR=33, BIT_AND=34, 
		BIT_OR=35, BIT_XOR=36, IDENT=37, COMMENT=38, WS=39;
	public const int
		CODE_MODE=1;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "CODE_MODE"
	};

	public static readonly string[] ruleNames = {
		"OPEN", "TEXT", "CLOSE", "INTEGER", "FLOAT", "BOOL", "STRING", "BRACE_L", 
		"BRACE_R", "INCREMENT", "DECREMENT", "MUL", "DIV", "MOD", "ADD", "SUB", 
		"PARENTHESES_L", "PARENTHESES_R", "IF", "DOT", "COMMA", "NOTEQUAL", "LOGIC_NOT", 
		"BIT_INVERT", "SHIFTL", "SHIFTR", "LESS", "LESSEQUAL", "GREATER", "GREATEREQUAL", 
		"EQUAL", "LOGIC_AND", "LOGIC_OR", "BIT_AND", "BIT_OR", "BIT_XOR", "IDENT", 
		"COMMENT", "WS"
	};


	protected bool IsBeginTag()
	{
		return (InputStream.LA(1)=='<' && InputStream.LA(2)=='%');
	}


	public TemplateLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public TemplateLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'<%'", null, "'%>'", null, null, null, null, "'{'", "'}'", "'++'", 
		"'--'", "'*'", "'/'", "'%'", "'+'", "'-'", "'('", "')'", "'if'", "'.'", 
		"','", "'!='", "'!'", "'~'", "'<<'", "'>>'", "'<'", "'<='", "'>'", "'>='", 
		"'=='", "'&&'", "'||'", "'&'", "'|'", "'^'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "OPEN", "TEXT", "CLOSE", "INTEGER", "FLOAT", "BOOL", "STRING", "BRACE_L", 
		"BRACE_R", "INCREMENT", "DECREMENT", "MUL", "DIV", "MOD", "ADD", "SUB", 
		"PARENTHESES_L", "PARENTHESES_R", "IF", "DOT", "COMMA", "NOTEQUAL", "LOGIC_NOT", 
		"BIT_INVERT", "SHIFTL", "SHIFTR", "LESS", "LESSEQUAL", "GREATER", "GREATEREQUAL", 
		"EQUAL", "LOGIC_AND", "LOGIC_OR", "BIT_AND", "BIT_OR", "BIT_XOR", "IDENT", 
		"COMMENT", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "TemplateLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static TemplateLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	public override bool Sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
		switch (ruleIndex) {
		case 1 : return TEXT_sempred(_localctx, predIndex);
		}
		return true;
	}
	private bool TEXT_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 0: return !IsBeginTag();
		}
		return true;
	}

	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', ')', '\x100', '\b', '\x1', '\b', '\x1', '\x4', '\x2', 
		'\t', '\x2', '\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', 
		'\x5', '\t', '\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', 
		'\x4', '\b', '\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', 
		'\x4', '\v', '\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', 
		'\x4', '\xE', '\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', 
		'\x10', '\x4', '\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', 
		'\x13', '\t', '\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', 
		'\x15', '\x4', '\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', 
		'\x18', '\t', '\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', 
		'\x1A', '\x4', '\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', 
		'\x1D', '\t', '\x1D', '\x4', '\x1E', '\t', '\x1E', '\x4', '\x1F', '\t', 
		'\x1F', '\x4', ' ', '\t', ' ', '\x4', '!', '\t', '!', '\x4', '\"', '\t', 
		'\"', '\x4', '#', '\t', '#', '\x4', '$', '\t', '$', '\x4', '%', '\t', 
		'%', '\x4', '&', '\t', '&', '\x4', '\'', '\t', '\'', '\x4', '(', '\t', 
		'(', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', 
		'\x3', '\x3', '\x3', '\x3', '\x6', '\x3', 'Z', '\n', '\x3', '\r', '\x3', 
		'\xE', '\x3', '[', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', 
		'\x3', '\x4', '\x3', '\x5', '\x6', '\x5', '\x64', '\n', '\x5', '\r', '\x5', 
		'\xE', '\x5', '\x65', '\x3', '\x6', '\x6', '\x6', 'i', '\n', '\x6', '\r', 
		'\x6', '\xE', '\x6', 'j', '\x3', '\x6', '\x3', '\x6', '\x6', '\x6', 'o', 
		'\n', '\x6', '\r', '\x6', '\xE', '\x6', 'p', '\x3', '\x6', '\x3', '\x6', 
		'\x5', '\x6', 'u', '\n', '\x6', '\x3', '\x6', '\x6', '\x6', 'x', '\n', 
		'\x6', '\r', '\x6', '\xE', '\x6', 'y', '\x5', '\x6', '|', '\n', '\x6', 
		'\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', 
		'\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x5', '\a', '\x87', '\n', 
		'\a', '\x3', '\b', '\x3', '\b', '\a', '\b', '\x8B', '\n', '\b', '\f', 
		'\b', '\xE', '\b', '\x8E', '\v', '\b', '\x3', '\b', '\x3', '\b', '\x3', 
		'\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', 
		'\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', 
		'\r', '\x3', '\xE', '\x3', '\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', 
		'\x3', '\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x13', '\x3', '\x13', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', 
		'\x3', '\x15', '\x3', '\x15', '\x3', '\x16', '\x3', '\x16', '\x3', '\x17', 
		'\x3', '\x17', '\x3', '\x17', '\x3', '\x18', '\x3', '\x18', '\x3', '\x19', 
		'\x3', '\x19', '\x3', '\x1A', '\x3', '\x1A', '\x3', '\x1A', '\x3', '\x1B', 
		'\x3', '\x1B', '\x3', '\x1B', '\x3', '\x1C', '\x3', '\x1C', '\x3', '\x1D', 
		'\x3', '\x1D', '\x3', '\x1D', '\x3', '\x1E', '\x3', '\x1E', '\x3', '\x1F', 
		'\x3', '\x1F', '\x3', '\x1F', '\x3', ' ', '\x3', ' ', '\x3', ' ', '\x3', 
		'!', '\x3', '!', '\x3', '!', '\x3', '\"', '\x3', '\"', '\x3', '\"', '\x3', 
		'#', '\x3', '#', '\x3', '$', '\x3', '$', '\x3', '%', '\x3', '%', '\x3', 
		'&', '\x3', '&', '\a', '&', '\xD9', '\n', '&', '\f', '&', '\xE', '&', 
		'\xDC', '\v', '&', '\x3', '\'', '\x3', '\'', '\x3', '\'', '\x3', '\'', 
		'\a', '\'', '\xE2', '\n', '\'', '\f', '\'', '\xE', '\'', '\xE5', '\v', 
		'\'', '\x3', '\'', '\x5', '\'', '\xE8', '\n', '\'', '\x3', '\'', '\x3', 
		'\'', '\x3', '\'', '\x3', '\'', '\x3', '\'', '\a', '\'', '\xEF', '\n', 
		'\'', '\f', '\'', '\xE', '\'', '\xF2', '\v', '\'', '\x3', '\'', '\x3', 
		'\'', '\x5', '\'', '\xF6', '\n', '\'', '\x3', '\'', '\x3', '\'', '\x3', 
		'(', '\x6', '(', '\xFB', '\n', '(', '\r', '(', '\xE', '(', '\xFC', '\x3', 
		'(', '\x3', '(', '\x4', '\x8C', '\xF0', '\x2', ')', '\x4', '\x3', '\x6', 
		'\x4', '\b', '\x5', '\n', '\x6', '\f', '\a', '\xE', '\b', '\x10', '\t', 
		'\x12', '\n', '\x14', '\v', '\x16', '\f', '\x18', '\r', '\x1A', '\xE', 
		'\x1C', '\xF', '\x1E', '\x10', ' ', '\x11', '\"', '\x12', '$', '\x13', 
		'&', '\x14', '(', '\x15', '*', '\x16', ',', '\x17', '.', '\x18', '\x30', 
		'\x19', '\x32', '\x1A', '\x34', '\x1B', '\x36', '\x1C', '\x38', '\x1D', 
		':', '\x1E', '<', '\x1F', '>', ' ', '@', '!', '\x42', '\"', '\x44', '#', 
		'\x46', '$', 'H', '%', 'J', '&', 'L', '\'', 'N', '(', 'P', ')', '\x4', 
		'\x2', '\x3', '\t', '\x3', '\x2', '\x32', ';', '\x4', '\x2', 'G', 'G', 
		'g', 'g', '\x4', '\x2', '-', '-', '/', '/', '\x5', '\x2', '\x43', '\\', 
		'\x61', '\x61', '\x63', '|', '\x6', '\x2', '\x32', ';', '\x43', '\\', 
		'\x61', '\x61', '\x63', '|', '\x4', '\x2', '\f', '\f', '\xF', '\xF', '\x5', 
		'\x2', '\v', '\f', '\xF', '\xF', '\"', '\"', '\x2', '\x10D', '\x2', '\x4', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x6', '\x3', '\x2', '\x2', '\x2', 
		'\x3', '\b', '\x3', '\x2', '\x2', '\x2', '\x3', '\n', '\x3', '\x2', '\x2', 
		'\x2', '\x3', '\f', '\x3', '\x2', '\x2', '\x2', '\x3', '\xE', '\x3', '\x2', 
		'\x2', '\x2', '\x3', '\x10', '\x3', '\x2', '\x2', '\x2', '\x3', '\x12', 
		'\x3', '\x2', '\x2', '\x2', '\x3', '\x14', '\x3', '\x2', '\x2', '\x2', 
		'\x3', '\x16', '\x3', '\x2', '\x2', '\x2', '\x3', '\x18', '\x3', '\x2', 
		'\x2', '\x2', '\x3', '\x1A', '\x3', '\x2', '\x2', '\x2', '\x3', '\x1C', 
		'\x3', '\x2', '\x2', '\x2', '\x3', '\x1E', '\x3', '\x2', '\x2', '\x2', 
		'\x3', ' ', '\x3', '\x2', '\x2', '\x2', '\x3', '\"', '\x3', '\x2', '\x2', 
		'\x2', '\x3', '$', '\x3', '\x2', '\x2', '\x2', '\x3', '&', '\x3', '\x2', 
		'\x2', '\x2', '\x3', '(', '\x3', '\x2', '\x2', '\x2', '\x3', '*', '\x3', 
		'\x2', '\x2', '\x2', '\x3', ',', '\x3', '\x2', '\x2', '\x2', '\x3', '.', 
		'\x3', '\x2', '\x2', '\x2', '\x3', '\x30', '\x3', '\x2', '\x2', '\x2', 
		'\x3', '\x32', '\x3', '\x2', '\x2', '\x2', '\x3', '\x34', '\x3', '\x2', 
		'\x2', '\x2', '\x3', '\x36', '\x3', '\x2', '\x2', '\x2', '\x3', '\x38', 
		'\x3', '\x2', '\x2', '\x2', '\x3', ':', '\x3', '\x2', '\x2', '\x2', '\x3', 
		'<', '\x3', '\x2', '\x2', '\x2', '\x3', '>', '\x3', '\x2', '\x2', '\x2', 
		'\x3', '@', '\x3', '\x2', '\x2', '\x2', '\x3', '\x42', '\x3', '\x2', '\x2', 
		'\x2', '\x3', '\x44', '\x3', '\x2', '\x2', '\x2', '\x3', '\x46', '\x3', 
		'\x2', '\x2', '\x2', '\x3', 'H', '\x3', '\x2', '\x2', '\x2', '\x3', 'J', 
		'\x3', '\x2', '\x2', '\x2', '\x3', 'L', '\x3', '\x2', '\x2', '\x2', '\x3', 
		'N', '\x3', '\x2', '\x2', '\x2', '\x3', 'P', '\x3', '\x2', '\x2', '\x2', 
		'\x4', 'R', '\x3', '\x2', '\x2', '\x2', '\x6', 'Y', '\x3', '\x2', '\x2', 
		'\x2', '\b', ']', '\x3', '\x2', '\x2', '\x2', '\n', '\x63', '\x3', '\x2', 
		'\x2', '\x2', '\f', 'h', '\x3', '\x2', '\x2', '\x2', '\xE', '\x86', '\x3', 
		'\x2', '\x2', '\x2', '\x10', '\x88', '\x3', '\x2', '\x2', '\x2', '\x12', 
		'\x91', '\x3', '\x2', '\x2', '\x2', '\x14', '\x93', '\x3', '\x2', '\x2', 
		'\x2', '\x16', '\x95', '\x3', '\x2', '\x2', '\x2', '\x18', '\x98', '\x3', 
		'\x2', '\x2', '\x2', '\x1A', '\x9B', '\x3', '\x2', '\x2', '\x2', '\x1C', 
		'\x9D', '\x3', '\x2', '\x2', '\x2', '\x1E', '\x9F', '\x3', '\x2', '\x2', 
		'\x2', ' ', '\xA1', '\x3', '\x2', '\x2', '\x2', '\"', '\xA3', '\x3', '\x2', 
		'\x2', '\x2', '$', '\xA5', '\x3', '\x2', '\x2', '\x2', '&', '\xA7', '\x3', 
		'\x2', '\x2', '\x2', '(', '\xA9', '\x3', '\x2', '\x2', '\x2', '*', '\xAC', 
		'\x3', '\x2', '\x2', '\x2', ',', '\xAE', '\x3', '\x2', '\x2', '\x2', '.', 
		'\xB0', '\x3', '\x2', '\x2', '\x2', '\x30', '\xB3', '\x3', '\x2', '\x2', 
		'\x2', '\x32', '\xB5', '\x3', '\x2', '\x2', '\x2', '\x34', '\xB7', '\x3', 
		'\x2', '\x2', '\x2', '\x36', '\xBA', '\x3', '\x2', '\x2', '\x2', '\x38', 
		'\xBD', '\x3', '\x2', '\x2', '\x2', ':', '\xBF', '\x3', '\x2', '\x2', 
		'\x2', '<', '\xC2', '\x3', '\x2', '\x2', '\x2', '>', '\xC4', '\x3', '\x2', 
		'\x2', '\x2', '@', '\xC7', '\x3', '\x2', '\x2', '\x2', '\x42', '\xCA', 
		'\x3', '\x2', '\x2', '\x2', '\x44', '\xCD', '\x3', '\x2', '\x2', '\x2', 
		'\x46', '\xD0', '\x3', '\x2', '\x2', '\x2', 'H', '\xD2', '\x3', '\x2', 
		'\x2', '\x2', 'J', '\xD4', '\x3', '\x2', '\x2', '\x2', 'L', '\xD6', '\x3', 
		'\x2', '\x2', '\x2', 'N', '\xF5', '\x3', '\x2', '\x2', '\x2', 'P', '\xFA', 
		'\x3', '\x2', '\x2', '\x2', 'R', 'S', '\a', '>', '\x2', '\x2', 'S', 'T', 
		'\a', '\'', '\x2', '\x2', 'T', 'U', '\x3', '\x2', '\x2', '\x2', 'U', 'V', 
		'\b', '\x2', '\x2', '\x2', 'V', '\x5', '\x3', '\x2', '\x2', '\x2', 'W', 
		'X', '\x6', '\x3', '\x2', '\x2', 'X', 'Z', '\v', '\x2', '\x2', '\x2', 
		'Y', 'W', '\x3', '\x2', '\x2', '\x2', 'Z', '[', '\x3', '\x2', '\x2', '\x2', 
		'[', 'Y', '\x3', '\x2', '\x2', '\x2', '[', '\\', '\x3', '\x2', '\x2', 
		'\x2', '\\', '\a', '\x3', '\x2', '\x2', '\x2', ']', '^', '\a', '\'', '\x2', 
		'\x2', '^', '_', '\a', '@', '\x2', '\x2', '_', '`', '\x3', '\x2', '\x2', 
		'\x2', '`', '\x61', '\b', '\x4', '\x3', '\x2', '\x61', '\t', '\x3', '\x2', 
		'\x2', '\x2', '\x62', '\x64', '\t', '\x2', '\x2', '\x2', '\x63', '\x62', 
		'\x3', '\x2', '\x2', '\x2', '\x64', '\x65', '\x3', '\x2', '\x2', '\x2', 
		'\x65', '\x63', '\x3', '\x2', '\x2', '\x2', '\x65', '\x66', '\x3', '\x2', 
		'\x2', '\x2', '\x66', '\v', '\x3', '\x2', '\x2', '\x2', 'g', 'i', '\t', 
		'\x2', '\x2', '\x2', 'h', 'g', '\x3', '\x2', '\x2', '\x2', 'i', 'j', '\x3', 
		'\x2', '\x2', '\x2', 'j', 'h', '\x3', '\x2', '\x2', '\x2', 'j', 'k', '\x3', 
		'\x2', '\x2', '\x2', 'k', 'l', '\x3', '\x2', '\x2', '\x2', 'l', 'n', '\a', 
		'\x30', '\x2', '\x2', 'm', 'o', '\t', '\x2', '\x2', '\x2', 'n', 'm', '\x3', 
		'\x2', '\x2', '\x2', 'o', 'p', '\x3', '\x2', '\x2', '\x2', 'p', 'n', '\x3', 
		'\x2', '\x2', '\x2', 'p', 'q', '\x3', '\x2', '\x2', '\x2', 'q', '{', '\x3', 
		'\x2', '\x2', '\x2', 'r', 't', '\t', '\x3', '\x2', '\x2', 's', 'u', '\t', 
		'\x4', '\x2', '\x2', 't', 's', '\x3', '\x2', '\x2', '\x2', 't', 'u', '\x3', 
		'\x2', '\x2', '\x2', 'u', 'w', '\x3', '\x2', '\x2', '\x2', 'v', 'x', '\t', 
		'\x2', '\x2', '\x2', 'w', 'v', '\x3', '\x2', '\x2', '\x2', 'x', 'y', '\x3', 
		'\x2', '\x2', '\x2', 'y', 'w', '\x3', '\x2', '\x2', '\x2', 'y', 'z', '\x3', 
		'\x2', '\x2', '\x2', 'z', '|', '\x3', '\x2', '\x2', '\x2', '{', 'r', '\x3', 
		'\x2', '\x2', '\x2', '{', '|', '\x3', '\x2', '\x2', '\x2', '|', '\r', 
		'\x3', '\x2', '\x2', '\x2', '}', '~', '\a', 'v', '\x2', '\x2', '~', '\x7F', 
		'\a', 't', '\x2', '\x2', '\x7F', '\x80', '\a', 'w', '\x2', '\x2', '\x80', 
		'\x87', '\a', 'g', '\x2', '\x2', '\x81', '\x82', '\a', 'h', '\x2', '\x2', 
		'\x82', '\x83', '\a', '\x63', '\x2', '\x2', '\x83', '\x84', '\a', 'n', 
		'\x2', '\x2', '\x84', '\x85', '\a', 'u', '\x2', '\x2', '\x85', '\x87', 
		'\a', 'g', '\x2', '\x2', '\x86', '}', '\x3', '\x2', '\x2', '\x2', '\x86', 
		'\x81', '\x3', '\x2', '\x2', '\x2', '\x87', '\xF', '\x3', '\x2', '\x2', 
		'\x2', '\x88', '\x8C', '\a', '$', '\x2', '\x2', '\x89', '\x8B', '\v', 
		'\x2', '\x2', '\x2', '\x8A', '\x89', '\x3', '\x2', '\x2', '\x2', '\x8B', 
		'\x8E', '\x3', '\x2', '\x2', '\x2', '\x8C', '\x8D', '\x3', '\x2', '\x2', 
		'\x2', '\x8C', '\x8A', '\x3', '\x2', '\x2', '\x2', '\x8D', '\x8F', '\x3', 
		'\x2', '\x2', '\x2', '\x8E', '\x8C', '\x3', '\x2', '\x2', '\x2', '\x8F', 
		'\x90', '\a', '$', '\x2', '\x2', '\x90', '\x11', '\x3', '\x2', '\x2', 
		'\x2', '\x91', '\x92', '\a', '}', '\x2', '\x2', '\x92', '\x13', '\x3', 
		'\x2', '\x2', '\x2', '\x93', '\x94', '\a', '\x7F', '\x2', '\x2', '\x94', 
		'\x15', '\x3', '\x2', '\x2', '\x2', '\x95', '\x96', '\a', '-', '\x2', 
		'\x2', '\x96', '\x97', '\a', '-', '\x2', '\x2', '\x97', '\x17', '\x3', 
		'\x2', '\x2', '\x2', '\x98', '\x99', '\a', '/', '\x2', '\x2', '\x99', 
		'\x9A', '\a', '/', '\x2', '\x2', '\x9A', '\x19', '\x3', '\x2', '\x2', 
		'\x2', '\x9B', '\x9C', '\a', ',', '\x2', '\x2', '\x9C', '\x1B', '\x3', 
		'\x2', '\x2', '\x2', '\x9D', '\x9E', '\a', '\x31', '\x2', '\x2', '\x9E', 
		'\x1D', '\x3', '\x2', '\x2', '\x2', '\x9F', '\xA0', '\a', '\'', '\x2', 
		'\x2', '\xA0', '\x1F', '\x3', '\x2', '\x2', '\x2', '\xA1', '\xA2', '\a', 
		'-', '\x2', '\x2', '\xA2', '!', '\x3', '\x2', '\x2', '\x2', '\xA3', '\xA4', 
		'\a', '/', '\x2', '\x2', '\xA4', '#', '\x3', '\x2', '\x2', '\x2', '\xA5', 
		'\xA6', '\a', '*', '\x2', '\x2', '\xA6', '%', '\x3', '\x2', '\x2', '\x2', 
		'\xA7', '\xA8', '\a', '+', '\x2', '\x2', '\xA8', '\'', '\x3', '\x2', '\x2', 
		'\x2', '\xA9', '\xAA', '\a', 'k', '\x2', '\x2', '\xAA', '\xAB', '\a', 
		'h', '\x2', '\x2', '\xAB', ')', '\x3', '\x2', '\x2', '\x2', '\xAC', '\xAD', 
		'\a', '\x30', '\x2', '\x2', '\xAD', '+', '\x3', '\x2', '\x2', '\x2', '\xAE', 
		'\xAF', '\a', '.', '\x2', '\x2', '\xAF', '-', '\x3', '\x2', '\x2', '\x2', 
		'\xB0', '\xB1', '\a', '#', '\x2', '\x2', '\xB1', '\xB2', '\a', '?', '\x2', 
		'\x2', '\xB2', '/', '\x3', '\x2', '\x2', '\x2', '\xB3', '\xB4', '\a', 
		'#', '\x2', '\x2', '\xB4', '\x31', '\x3', '\x2', '\x2', '\x2', '\xB5', 
		'\xB6', '\a', '\x80', '\x2', '\x2', '\xB6', '\x33', '\x3', '\x2', '\x2', 
		'\x2', '\xB7', '\xB8', '\a', '>', '\x2', '\x2', '\xB8', '\xB9', '\a', 
		'>', '\x2', '\x2', '\xB9', '\x35', '\x3', '\x2', '\x2', '\x2', '\xBA', 
		'\xBB', '\a', '@', '\x2', '\x2', '\xBB', '\xBC', '\a', '@', '\x2', '\x2', 
		'\xBC', '\x37', '\x3', '\x2', '\x2', '\x2', '\xBD', '\xBE', '\a', '>', 
		'\x2', '\x2', '\xBE', '\x39', '\x3', '\x2', '\x2', '\x2', '\xBF', '\xC0', 
		'\a', '>', '\x2', '\x2', '\xC0', '\xC1', '\a', '?', '\x2', '\x2', '\xC1', 
		';', '\x3', '\x2', '\x2', '\x2', '\xC2', '\xC3', '\a', '@', '\x2', '\x2', 
		'\xC3', '=', '\x3', '\x2', '\x2', '\x2', '\xC4', '\xC5', '\a', '@', '\x2', 
		'\x2', '\xC5', '\xC6', '\a', '?', '\x2', '\x2', '\xC6', '?', '\x3', '\x2', 
		'\x2', '\x2', '\xC7', '\xC8', '\a', '?', '\x2', '\x2', '\xC8', '\xC9', 
		'\a', '?', '\x2', '\x2', '\xC9', '\x41', '\x3', '\x2', '\x2', '\x2', '\xCA', 
		'\xCB', '\a', '(', '\x2', '\x2', '\xCB', '\xCC', '\a', '(', '\x2', '\x2', 
		'\xCC', '\x43', '\x3', '\x2', '\x2', '\x2', '\xCD', '\xCE', '\a', '~', 
		'\x2', '\x2', '\xCE', '\xCF', '\a', '~', '\x2', '\x2', '\xCF', '\x45', 
		'\x3', '\x2', '\x2', '\x2', '\xD0', '\xD1', '\a', '(', '\x2', '\x2', '\xD1', 
		'G', '\x3', '\x2', '\x2', '\x2', '\xD2', '\xD3', '\a', '~', '\x2', '\x2', 
		'\xD3', 'I', '\x3', '\x2', '\x2', '\x2', '\xD4', '\xD5', '\a', '`', '\x2', 
		'\x2', '\xD5', 'K', '\x3', '\x2', '\x2', '\x2', '\xD6', '\xDA', '\t', 
		'\x5', '\x2', '\x2', '\xD7', '\xD9', '\t', '\x6', '\x2', '\x2', '\xD8', 
		'\xD7', '\x3', '\x2', '\x2', '\x2', '\xD9', '\xDC', '\x3', '\x2', '\x2', 
		'\x2', '\xDA', '\xD8', '\x3', '\x2', '\x2', '\x2', '\xDA', '\xDB', '\x3', 
		'\x2', '\x2', '\x2', '\xDB', 'M', '\x3', '\x2', '\x2', '\x2', '\xDC', 
		'\xDA', '\x3', '\x2', '\x2', '\x2', '\xDD', '\xDE', '\a', '\x31', '\x2', 
		'\x2', '\xDE', '\xDF', '\a', '\x31', '\x2', '\x2', '\xDF', '\xE3', '\x3', 
		'\x2', '\x2', '\x2', '\xE0', '\xE2', '\n', '\a', '\x2', '\x2', '\xE1', 
		'\xE0', '\x3', '\x2', '\x2', '\x2', '\xE2', '\xE5', '\x3', '\x2', '\x2', 
		'\x2', '\xE3', '\xE1', '\x3', '\x2', '\x2', '\x2', '\xE3', '\xE4', '\x3', 
		'\x2', '\x2', '\x2', '\xE4', '\xE7', '\x3', '\x2', '\x2', '\x2', '\xE5', 
		'\xE3', '\x3', '\x2', '\x2', '\x2', '\xE6', '\xE8', '\a', '\xF', '\x2', 
		'\x2', '\xE7', '\xE6', '\x3', '\x2', '\x2', '\x2', '\xE7', '\xE8', '\x3', 
		'\x2', '\x2', '\x2', '\xE8', '\xE9', '\x3', '\x2', '\x2', '\x2', '\xE9', 
		'\xF6', '\a', '\f', '\x2', '\x2', '\xEA', '\xEB', '\a', '\x31', '\x2', 
		'\x2', '\xEB', '\xEC', '\a', ',', '\x2', '\x2', '\xEC', '\xF0', '\x3', 
		'\x2', '\x2', '\x2', '\xED', '\xEF', '\v', '\x2', '\x2', '\x2', '\xEE', 
		'\xED', '\x3', '\x2', '\x2', '\x2', '\xEF', '\xF2', '\x3', '\x2', '\x2', 
		'\x2', '\xF0', '\xF1', '\x3', '\x2', '\x2', '\x2', '\xF0', '\xEE', '\x3', 
		'\x2', '\x2', '\x2', '\xF1', '\xF3', '\x3', '\x2', '\x2', '\x2', '\xF2', 
		'\xF0', '\x3', '\x2', '\x2', '\x2', '\xF3', '\xF4', '\a', ',', '\x2', 
		'\x2', '\xF4', '\xF6', '\a', '\x31', '\x2', '\x2', '\xF5', '\xDD', '\x3', 
		'\x2', '\x2', '\x2', '\xF5', '\xEA', '\x3', '\x2', '\x2', '\x2', '\xF6', 
		'\xF7', '\x3', '\x2', '\x2', '\x2', '\xF7', '\xF8', '\b', '\'', '\x4', 
		'\x2', '\xF8', 'O', '\x3', '\x2', '\x2', '\x2', '\xF9', '\xFB', '\t', 
		'\b', '\x2', '\x2', '\xFA', '\xF9', '\x3', '\x2', '\x2', '\x2', '\xFB', 
		'\xFC', '\x3', '\x2', '\x2', '\x2', '\xFC', '\xFA', '\x3', '\x2', '\x2', 
		'\x2', '\xFC', '\xFD', '\x3', '\x2', '\x2', '\x2', '\xFD', '\xFE', '\x3', 
		'\x2', '\x2', '\x2', '\xFE', '\xFF', '\b', '(', '\x5', '\x2', '\xFF', 
		'Q', '\x3', '\x2', '\x2', '\x2', '\x13', '\x2', '\x3', '[', '\x65', 'j', 
		'p', 't', 'y', '{', '\x86', '\x8C', '\xDA', '\xE3', '\xE7', '\xF0', '\xF5', 
		'\xFC', '\x6', '\x4', '\x3', '\x2', '\x4', '\x2', '\x2', '\x2', '\x3', 
		'\x2', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
